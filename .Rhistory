?axis
range(ksi$YEAR)
list.files()
options(width = 130)
mkdir
 dir.create("test")
uppercase("test")
    stations <- read.table(url.weather, header = TRUE, skip = 3)
    stations <- read.table(url.weather, header = TRUE, skip = 3)
    stations <- read.table(url.weather, header = TRUE, skip = 3)
    stations <- read.csv(weatherstations, header = TRUE, skip = 3)
head(stations)
str(stations$Latitude..Decimal.Degrees.)
    stations <- stations[grepl("TORONTO", stations$Name),]
stations
library(string)
library(stringr)
    names(stations) <- str_replace(names(stations), ".", "")
stations
    stations <- read.csv(weatherstations, header = TRUE, skip = 3)
    names(stations) <- str_replace(names(stations), "\\.", "")
names(stations)
    stations <- read.csv(weatherstations, header = TRUE, skip = 3)
    names(stations) <- str_replace(names(stations), "\\.+", "")
names(stations)
    stations <- read.csv(weatherstations, header = TRUE, skip = 3)
    names(stations) <- str_replace(names(stations), "\\.{1,}", "")
names(stations)
    names(stations) <- str_replace(names(stations), "[\\.]{1,}", "")
names(stations)
    names(stations) <- str_replace(names(stations), "[\\.]{1,}", "")
names(stations)
names(stations)
plot(ksi$X, ksi$Y)
points(stations$LatitudeDecimalDegrees, stations$LongitudeDecimalDegrees)
points(stations$LatitudeDecimalDegrees, stations$LongitudeDecimalDegrees, col = 'red')
points(y = stations$LatitudeDecimalDegrees, x = stations$LongitudeDecimalDegrees, col = 'red')
stations
    names(stations) <- str_replace_all(names(stations), "[\\.]{1,}", "")
    stations <- stations[grepl(region, stations$Name),]
    stations <-     names(stations) <- str_replace_all(names(stations), "[\\.]{1,}", "")
    stations <- stations[grepl(region, stations$Name),]
    stations <- 
    stations <- stations[grepl("TORONTO", stations$Name),]
stations
dir.exists("ClimateData")
message("test")
?stopifnot
stations
    validstations <- with(stations, HLYFirstYear <= 2007 & HLYLastYear >= 2017)
validstations
any(validstations)
any(NA)
stopifnot(NA
)
any(c(FALSE,NA))
any(c(FALSE,NA,TRUE))
stations[validstations,]
which(validstations)
seq(1,10, by = 1)
read.table("http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=csv&stationID=1706&Year=2018&Month=2&Day=14&timeframe=1&submit= Download+Data")
read.table("http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=csv&stationID=1706&Year=2018&Month=2&Day=14&timeframe=1&submit= Download+Data", skip = 15)
scan("http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=csv&stationID=1706&Year=2018&Month=2&Day=14&timeframe=1&submit= Download+Data", skip = 15)
scan("http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=csv&stationID=1706&Year=2018&Month=2&Day=14&timeframe=1&submit= Download+Data", skip = 15, what = character())
scan("http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=csv&stationID=1706&Year=2018&Month=2&Day=14&timeframe=1&submit= Download+Data", skip = 15, what = character(), sep = "/n")
scan("http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=csv&stationID=1706&Year=2018&Month=2&Day=14&timeframe=1&submit= Download+Data", skip = 15, what = character(), sep = "\n")
672/24
stations[validstations,]
stations[which(validstations),]
scan("http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=csv&stationID=31688&Year=2015&Month=2&Day=14&timeframe=1&submit= Download+Data", skip = 15, what = character(), sep = "\n")
scanned <- scan("http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=csv&stationID=31688&Year=2015&Month=2&Day=14&timeframe=1&submit= Download+Data", skip = 15, what = character(), sep = "\n")
str(fielded)
str(quotecleaned)
quotecleaned[[1]]
quotecleaned[[2]]
cbind(quotecleaned[[1]],quotecleaned[[2]])
rbind(quotecleaned)
colnames
colnames
quotecleaned[[1]]
quotecleaned[[length(quotecleaned)]]
quotecleaned[[1]]
length(quotecleaned)
length(quoteleaned[[2:length(quotecleaned)]])
length(quotecleaned[[2:length(quotecleaned)]])
quotecleaned[[2:length(quotecleaned)]]
length(quotecleaned)
length(2:673)
length(quotecleaned[2:length(quotecleaned)])
head(scanned.frame)
?as.data.frame
?matrix
16090/672
length(unlist(quotecleaned))
lapply(quotecleaned, function(el) length(el) != length(colnames))
sapply(quotecleaned, function(el) length(el) != length(colnames))
which(sapply(quotecleaned, function(el) length(el) != length(colnames)))
quotecleaned[[107]]
quotecleaned[[108]]
which(sapply(fielded, function(el) length(el) != length(colnames)))
str(quotecleaned)
colnames
summary(scanned.frame)
head(scanned.frame)
summary(scanned.frame)
summary(scanned.frame)
summary(scanned.frame)
summary(scanned.frame)
summary(scanned.frame)
summary(scanned.frame)
summary(scanned.frame)
summary(scanned.frame)
scanned.frame$Time
names(stations)
    stations <- stations[grepl("TORONTO", stations$Name),]
stations
yearrng <- c(2007, 2017)
    validstations <- with(stations, HLYFirstYear <= yearrng[1] & HLYLastYear >= yearrng[2])
validstations
stations
yearseq
yearmonthspec
test <- list(2 = 7)
yearmonthspec
apply(yearmonthspec, 1, function(el) list(2))
stations$StationID
str(weatherdata[[1]])
rm(list = ls())
ksi.yearrange
ls()
climateData <- ClimatePull(yearrng = ksi.yearrange, save = TRUE) 
names(climateData)
names(climateData$Key)
cbind
names(ksi)
head(ksi$Hour)
names(climateData$Data)
names(climateData$Data[[1]])
grepl(2, "test2")
climateData["Key]
climateData["Key"]
climateData[["Key"]]
head(ksi$DATE)
names(ksi)
head(ksi$Date)
day(head(ksi$Date))
date(head(ksi$Date))
months(head(ksi$Date))
date(head(ksi$DateTime))
days(head(ksi$DateTime))
months(head(ksi$DateTime))
format(head(ksi$DateTime), "%d")
ksi$DateTime
head(ksi$MONTH)
names(ksi)
head(ksi$DateTime)
month(head(ksi$DateTime))
years(head(ksi$DateTime))
year(head(ksi$DateTime))
year(head(ksi$DateTime))
hour
climateData$Data
climateData$Data[[1]]
head(climateData$Data[[1]])
head(climateData$Data[[1]][[1]])
head(ksi$PadTime)
climateData$Data[[1]][[1]]$Time
head(climateData$Data[[1]][[1]])
dim(weatherksi)
weatherksi[,1:10]
names(e)climateData.data
names(climateData.data)
names(climateData.data[[1]])
dim(weatherksi)
weatherksi[,1:10]
weatherksi[,1:10]
rm(weatherksi)
warnings()
dim(ksi.weather)
ksi.weather[,1:10]
climateData.relcol
dim(ksi.weather)
head(ksi.weather)
dim(ksi.weather)
dim(ksi.weather)
head(ksi.weather)
head(ksi.weather)
head(ksi.weather)
climateData.data[[1]][1:6,]
test <- data.frame(ksi, ksi.weather)
names(test)
str(test)
head(ksi.weather)
summary(ksi.weather$WindDir)
summary(ksi.weather$WindDir)
head(ksi.weather)
head(ksi.weather)
summary(ksi.weather$WindDir)
summary(ksi.weather$WindDirFlag)
summary(ksi.weather$WindChill)
head(ksi.weather)
summary(ksi.weather$WindSpd)
summary(ksi.weather$Visibility)
summary(ksi.weather$WindChill)
head(ksi.weather)
levels(ksi$ACCLASS)
library(ggmap)
ksi$X
ksi$X
?legnd
?legend
names(ksi)
data.frame(NA, ncol = 2, nrow = 2)
matrix(ncol = 2, nrow = 2)
data.frame(matrix(ncol = 2, nrow = 2))
str(data.frame(matrix(ncol = 2, nrow = 2)))
data.frame(matrix(ncol = 2, nrow = 2, dimnames = list(NULL, c(1,2))))
data.frame(matrix(ncol = 2, nrow = 2, dimnames = list(NULL, c("a","b"))))
str(climateData.data)
test <- listRestructure(climateData.data)
test <- listRestructure(climateData.data)
names(test)
str(test)
test <- listRestructure(climateData.data)
str(test)
str(climateData.data)
head(levels(climateData.data$`Date/Time`), n = 30)
head(levels(climateData.data$`Date/Time`), n = 300)
head(climateData.data$DateTime)
head(climateData.data$DateTime)
head(climateData.data)
86400/24
UNIXhour(head(climateData.data$DateTime))
UNIXhour(head(ksi$DateTime))
dim(ksi.weather)
ksi.weather[,1:10]
head(ksi.weather)
head(ksi.weather)
write.csv(ksi, "KSI_weather.csv")
str(ksi)
levels(ksi$INJURY)
levels(ksi$INJURY)
table(ksi$INJURY)
table(ksi$ACCLASS)
str(ksi.weather)
str(t(ksi.weather))
test <- as.data.frame(ksi.weather)
str(test)
str(ksi.weather)
ksi.weather[,1:10]
test <- data.frame(t(ksi.weather))
head(test)
names(ksi)
head(ksi.weather)
write.csv(ksi, "KSI_weather.csv")
sapply(UNIXhour(climateData.data$DateTime),
                                         function(hour) sum(tempHour == hour))
test <- sapply(UNIXhour(climateData.data$DateTime),
                                         function(hour) sum(tempHour == hour))
head(test)
str(test)
summary(test)
sum(test == 0)
write.csv(climateData.data, "ClimateData/processeddata.csv")
write.csv(climateData.data, "ClimateData/processeddata.csv", row.numbers = FALSE)
write.csv(climateData.data, "ClimateData/processeddata.csv", row.names = FALSE)
write.csv(ksi, "KSI_weather.csv", row.names = FALSE)
pairs(climateData.data)
pairs(climateData.data, pch = ".")
pairs(climateData.data[,c("AccidentCount", "Temp", "StnPress", "RelHum", "DewPointTemp")])
lapply(unique(climateData.data$AccidentCount), function(el) var(climateData.data[climateData.data == el,]))
var(climateData.data)
var(climateData.data, na.rm = TRUE)
cov(climateData.data, na.rm = TRUE)
cov(climateData.data)
cov(ksi[,c("X","Y","DateTime")]
)
table(as.factor(months(ksi$DateTime)))
table(data.frame(Month = as.factor(months(ksi$DateTime)), Severity = ksi$INJURY))
mosaicplot(table(data.frame(Month = as.factor(months(ksi$DateTime)), Severity = ksi$INJURY)))
mosaicplot(table(data.frame(Month = as.factor(months(ksi$DateTime)), Severity = ksi$INJURY)), shade = TRUE)
summary(climGLM)
summary(climGLM)
summary(climGLM)
cor(climateData.data[,c("Temp","DewPointTemp")]
)
cor(climateData.data[,c("Temp","DewPointTemp")])
plot(climGLM)
